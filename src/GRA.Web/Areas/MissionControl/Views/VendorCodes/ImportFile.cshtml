@model string
<div class="modal fade" tabindex="-1" role="dialog" id="wsModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="wsTitle">Importing vendor status updates...</h4>
            </div>
            <div class="modal-body">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped" role="progressbar" id="wsProgress" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;"></div>
                </div>
                <p id="wsStatus"></p>
            </div>
            <div class="modal-footer">
                <div class="form-control-static pull-left" style="width: 2rem;">
                    <span class="fa fa-circle" id="sendWs" style="color: steelblue;"></span>
                </div>
                <div class="form-control-static pull-left" style="width: 2rem;">
                    <span class="fa fa-circle" id="recvWs" style="color: lightcoral;"></span>
                </div>
                <button type="button" class="btn" id="cancelWs">Cancel import</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section scripts {
    <script>
    var wsStarted = false;
    var wsFinished = false;
    var wsCancel = false;
    var webSocket;
    var wsPing;
    var wsFunction = 'import';
    var wsUrl = '@Model';
    var wsSuccessUrl = '@Url.Action("ImportStatus")';
    var wsSuccessRedirect = '';
    var wsSuccessButton = 'Ok';
    var wsCancelUrl = '@Url.Action("ImportStatus")';

    function updateState(e) {
        if (!webSocket) {
            $('#wsStatus').text('Cannot communicate with server.');
        } else if (!wsCancel) {
            switch (webSocket.readyState) {
                case WebSocket.CLOSED:
                    clearPing();
                    if (wsStarted && wsFinished) {
                        if (e && e.data) {
                            statusUpdate(e);
                        }
                        if (wsSuccessRedirect.length > 0) {
                            window.location.href = wsSuccessRedirect;
                        }
                        else {
                            $('#cancelWs').text(wsSuccessButton);
                            $('#cancelWs').removeClass('btn-danger');
                            $('#cancelWs').addClass('btn-success');
                            $('#cancelWs').on('click', function () {
                                window.location.href = wsSuccessUrl;
                                return false;
                            });
                        }
                    } else if (wsStarted && !wsFinished) {
                        $('#cancelWs').text('Close window');
                        $('#cancelWs').addClass('btn-danger');
                        $('#wsProgress').removeClass('active');
                        $('#wsProgress').addClass('progress-bar-danger');
                        $('#wsStatus').text('The server disconnected while running the ' + wsFunction + '.');
                    }
                    break;
                case WebSocket.CLOSING:
                    if (wsStarted) {
                        $('#wsStatus').text('Connection closing...');
                    }
                    break;
                case WebSocket.CONNECTING:
                    $('#wsStatus').text('Connecting...');
                    break;
                case WebSocket.OPEN:
                    if (e && e.data) {
                        var incoming = JSON.parse(e.data);
                        $('#recvWs').fadeIn(200, function () {
                            $('#recvWs').fadeOut(1);
                        });
                        if (incoming.Title) {
                            $('#wsTitle').html(incoming.Title);
                        }
                        if (incoming.Status) {
                            $('#wsStatus').html(incoming.Status);
                        }
                        if (incoming.PercentComplete) {
                            $('#wsProgress').width(incoming.PercentComplete + '%');
                            if (incoming.PercentComplete > 4) {
                                $('#wsProgress').text(incoming.PercentComplete + '%');
                            }
                            else
                            {
                                $('#wsProgress').text('');
                            }
                        }
                        if (incoming.Complete) {
                            wsFinished = true;
                            if (incoming.Error) {
                                $('#cancelWs').text('Close window');
                                $('#wsProgress').removeClass('active');
                                $('#wsProgress').addClass('progress-bar-danger');
                            }
                            else
                            {
                                $('#cancelWs').text('Close window');
                                $('#cancelWs').removeClass('btn-danger');
                                $('#cancelWs').addClass('btn-default');
                                $('#wsProgress').removeClass('active');
                                $('#wsProgress').addClass('progress-bar-success');
                            }
                            webSocket.close();
                            clearPing();
                        }
                    }
                    break;
                default:
                    $('#wsStatus').text('Unknown state: ' + webSocket.readyState);
                    break;
            }
        }
    }

    function doPing() {
        if (webSocket && webSocket.readyState == WebSocket.OPEN && !wsFinished) {
            webSocket.send(String.fromCharCode(6));
            $('#sendWs').fadeIn(200, function () {
                $('#sendWs').fadeOut(1);
            });
        }
    }

    function clearPing() {
        if (wsPing) {
            clearInterval(wsPing);
        }
    }

    $().ready(function () {
        wsCancel = false;
        $('#wsProgress').removeClass('active');
        $('#wsProgress').removeClass('progress-bar-danger');
        $('#wsProgress').removeClass('progress-bar-success');
        $('#cancelWs').text('Cancel ' + wsFunction);
        $('#cancelWs').addClass('btn-danger');
        $('#wsModal').modal({
            backdrop: 'static',
            keyboard: false
        });
        webSocket = new WebSocket(wsUrl);
        webSocket.onopen = function (e) {
            $('#wsProgress').addClass('active');
            wsStarted = true;
        }
        webSocket.onclose = updateState;
        webSocket.onerror = updateState;
        webSocket.onmessage = updateState;
        wsPing = setInterval(doPing, 1000);
        return false;
        });

        $('#cancelWs').click(function () {
            wsCancel = true;
            if (webSocket && webSocket.readyState == WebSocket.OPEN) {
                webSocket.close();
            }
            clearPing();
            window.location.href = wsCancelUrl;
        });
    </script>
}