@model GRA.Controllers.ViewModel.MissionControl.Schools.EnteredListViewModel

@Html.Partial("_SchoolsPartial")

<div class="row">
    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel">
        <div class="modal-dialog" role="document">
            <form id="schoolForm" asp-controller="Schools" asp-action="Entered" method="post" role="form" style="display:inline">
                <input asp-for="NewSchool" type="hidden" />
                <input asp-for="CurrentPage" type="hidden" />
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="addModalLabel"><span class="actionText">Merge</span> entered school</h4>
                    </div>
                    <div class="modal-body">
                        <ul class="nav nav-tabs gra-nav-tabs" role="tablist">
                            <li role="presentation" class="active">
                                <a id="existingTab" href="#existing" aria-controls="existing" role="tab" data-toggle="tab">Existing</a>
                            </li>
                            <li role="presentation">
                                <a id="newTab" href="#new" aria-controls="new" role="tab" data-toggle="tab">New</a>
                            </li>
                        </ul>
                        <div class="tab-pane gra-tab-pane">
                            <div id="schoolList" class="form-group">
                                <label asp-for="SchoolId" class="control-label"></label>
                                <select asp-for="SchoolId" class="form-control"></select>
                                <span asp-validation-for="SchoolId" class="text-danger"></span>
                            </div>

                            <div id="schoolName" class="form-group hide">
                                <input id="EnteredSchool_Id" name="EnteredSchool.Id" type="hidden" />
                                <label asp-for="EnteredSchool.Name" class="control-label"></label>
                                <input asp-for="EnteredSchool.Name" class="form-control" />
                                <span asp-validation-for="EnteredSchool.Name" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="EnteredSchool.SchoolDistrictId" class="control-label"></label>
                                <select asp-for="EnteredSchool.SchoolDistrictId" asp-items="Model.SchoolDistricts" class="form-control"></select>
                                <span asp-validation-for="EnteredSchool.SchoolDistrictId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="EnteredSchool.SchoolTypeId" class="control-label"></label>
                                <select asp-for="EnteredSchool.SchoolTypeId" asp-items="Model.SchoolTypes" class="form-control ignore">
                                    <option></option>
                                </select>
                                <span asp-validation-for="EnteredSchool.SchoolTypeId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" style="margin-right: 1em;">Cancel</button>
                        <button type="submit" class="btn btn-primary pull-right" aria-label="Confirm">
                            <span class="actionText">Merge</span>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="row" style="padding: 10px 0;">
    <div class="col-xs-12">
        @if (Model.EnteredSchools.Count() == 0)
        {
            <div class="alert alert-warning">No Entered Schools</div>
        }
        else
        {
            <div>
                <table class="table table-condensed table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>District</th>
                            <th width="100">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var enteredSchool in Model.EnteredSchools)
                        {
                            <tr>
                                <td>
                                    @enteredSchool.Name
                                </td>
                                <td>
                                    @Model.SchoolDistricts.Where(_ => _.Value == enteredSchool.SchoolDistrictId.ToString()).FirstOrDefault().Text
                                </td>
                                <td>
                                    <button type="submit"
                                            class="btn btn-primary btn-xs"
                                            data-toggle="modal"
                                            data-target="#addModal"
                                            data-id="@enteredSchool.Id"
                                            data-name="@enteredSchool.Name"
                                            data-district="@enteredSchool.SchoolDistrictId">
                                        <span class="fa fa-2x fa-plus" aria-hidden="true"></span>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @if (Model.PaginateModel.MaxPage > 1)
            {
                <paginate paginateModel="@Model.PaginateModel"></paginate>
            }
        }
    </div>
</div>

@section scripts
{
    <script>
        $.validator.setDefaults({
            ignore: ".ignore"
        });

        $('#addModal').on('show.bs.modal', function (event) {
            $('.input-validation-error').removeClass('input-validation-error');
            $('.field-validation-error').html("");
            var button = $(event.relatedTarget);
            var id = button.data('id');
            var name = button.data('name');
            var district = button.data('district');
            var modal = $(this);
            modal.find('#editModalLabel').text('Add entered school - "' + name + '" to list');
            modal.find('#EnteredSchool_Id').val(id);
            modal.find('#EnteredSchool_Name').val(name);
            modal.find("#EnteredSchool_SchoolTypeId").val("");
            modal.find("#EnteredSchool_SchoolDistrictId").val(district);
            modal.find('#EnteredSchool_SchoolDistrictId option[value="' + district + '"]').attr("selected", "selected");
            if ($("#NewSchool").val() == "False") {
                UpdateTypeList(district, "", name)
            }
            else {
                UpdateTypeList("", "");
            }
        })

        $("#existingTab").on("show.bs.tab", function () {
            $("#NewSchool").val("False");
            $("#SchoolId").removeClass("ignore");
            $("#EnteredSchool_SchoolTypeId, #EnteredSchool_Name").addClass("ignore");
            $(".actionText").text("Merge");
            $("#schoolName").addClass("hide");
            $("#schoolList").removeClass("hide");
            UpdateTypeList($("#EnteredSchool_SchoolDistrictId").val(), $("#EnteredSchool_SchoolTypeId").val(), "");
        });

        $("#newTab").on("show.bs.tab", function () {
            $("#NewSchool").val("True");
            $("#EnteredSchool_SchoolTypeId, #EnteredSchool_Name").removeClass("ignore");
            $("#SchoolId").addClass("ignore");
            $(".actionText").text("Add");
            $("#schoolList").addClass("hide");
            $("#schoolName").removeClass("hide");
            UpdateTypeList("", $("#EnteredSchool_SchoolTypeId").val(), "");
        });

        $("#EnteredSchool_SchoolDistrictId").on("change", function () {
            var districtId = $(this).val();
            var typeList = $("#EnteredSchool_SchoolTypeId");
            if ($("#NewSchool").val() == "False") {
                UpdateTypeList(districtId, typeList.val(), "")
            }
        });

        $("#EnteredSchool_SchoolTypeId").on("change", function () {
            var typeId = $(this).val();
            var districtId = $("#EnteredSchool_SchoolDistrictId").val();
            if ($("#NewSchool").val() == "False") {
                UpdateSchoolList(districtId, typeId, "");
            }
        });

        function UpdateTypeList(districtId, typeId, name) {
            var typeList = $("#EnteredSchool_SchoolTypeId");
            var getTypesUrl = "@Url.Action("GetSchoolTypes", "Lookup", new { Area = string.Empty })";
            $.getJSON(getTypesUrl, { districtId: districtId, typeId: typeList.val() }, function(response) {
                typeList.empty();
                if (response.length > 1)
                {
                    typeList.append(new Option("", "", true, true));
                    $.each(response, function (index, item) {
                        typeList.append(new Option(item.text, item.value, item.selected, item.selected))
                    });
                }
                else {
                    $.each(response, function (index, item) {
                        typeList.append(new Option(item.text, item.value, item.selected, item.selected))
                    });
                }
            }).done(function () {
                if ($("#NewSchool").val() == "False") {
                    UpdateSchoolList(districtId, $("#EnteredSchool_SchoolTypeId").val(), name);
                }
            });
        }

        function UpdateSchoolList(districtId, typeId, schoolName) {
            var schoolList = $("#SchoolId");
            var schoolId = schoolList.val();
            var getSchoolsUrl = "@Url.Action("GetSchools", "Lookup", new { Area = string.Empty })";
            $.getJSON(getSchoolsUrl, { districtId: districtId, typeId: typeId, schoolId: schoolId, schoolName: schoolName }, function (response) {
                schoolList.empty();
                schoolList.append(new Option("", ""));
                $.each(response, function (index, item) {
                    schoolList.append(new Option(item.text, item.value, item.selected, item.selected))
                });
            });
        }
    </script>
}